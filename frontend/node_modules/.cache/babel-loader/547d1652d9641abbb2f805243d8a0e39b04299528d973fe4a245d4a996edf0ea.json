{"ast":null,"code":"var _jsxFileName = \"/home/mighty/Desktop/CODE/Blog_Post/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { getToken } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        error: null\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: true,\n  error: null\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = getToken();\n      if (token) {\n        try {\n          const response = await authService.verifyToken();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.user\n            }\n          });\n        } catch (error) {\n          authService.logout();\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'LOGOUT'\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async credentials => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authService.login(credentials);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: response.user\n        }\n      });\n      return response;\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authService.register(userData);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: response.user\n        }\n      });\n      return response;\n    } catch (error) {\n      dispatch({\n        type: 'LOGIN_FAILURE',\n        payload: error.message\n      });\n      throw error;\n    }\n  };\n  const logout = () => {\n    authService.logout();\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","getToken","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","loading","error","isAuthenticated","user","payload","initialState","AuthProvider","children","_s","dispatch","checkAuth","token","response","verifyToken","logout","login","credentials","message","register","userData","updateUser","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/mighty/Desktop/CODE/Blog_Post/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { getToken } from '../services/api';\n\nconst AuthContext = createContext();\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return { ...state, loading: true, error: null };\n    case 'LOGIN_SUCCESS':\n      return { \n        ...state, \n        loading: false, \n        isAuthenticated: true, \n        user: action.payload.user,\n        error: null \n      };\n    case 'LOGIN_FAILURE':\n      return { \n        ...state, \n        loading: false, \n        isAuthenticated: false, \n        user: null, \n        error: action.payload \n      };\n    case 'LOGOUT':\n      return { \n        ...state, \n        isAuthenticated: false, \n        user: null, \n        loading: false,\n        error: null \n      };\n    case 'UPDATE_USER':\n      return { \n        ...state, \n        user: { ...state.user, ...action.payload } \n      };\n    case 'CLEAR_ERROR':\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: true,\n  error: null,\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = getToken();\n      if (token) {\n        try {\n          const response = await authService.verifyToken();\n          dispatch({ \n            type: 'LOGIN_SUCCESS', \n            payload: { user: response.user } \n          });\n        } catch (error) {\n          authService.logout();\n          dispatch({ type: 'LOGOUT' });\n        }\n      } else {\n        dispatch({ type: 'LOGOUT' });\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    dispatch({ type: 'LOGIN_START' });\n    try {\n      const response = await authService.login(credentials);\n      dispatch({ \n        type: 'LOGIN_SUCCESS', \n        payload: { user: response.user } \n      });\n      return response;\n    } catch (error) {\n      dispatch({ \n        type: 'LOGIN_FAILURE', \n        payload: error.message \n      });\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    dispatch({ type: 'LOGIN_START' });\n    try {\n      const response = await authService.register(userData);\n      dispatch({ \n        type: 'LOGIN_SUCCESS', \n        payload: { user: response.user } \n      });\n      return response;\n    } catch (error) {\n      dispatch({ \n        type: 'LOGIN_FAILURE', \n        payload: error.message \n      });\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    authService.logout();\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const updateUser = (userData) => {\n    dispatch({ type: 'UPDATE_USER', payload: userData });\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser,\n    clearError,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMS,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGF,KAAK;QAAEG,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACjD,KAAK,eAAe;MAClB,OAAO;QACL,GAAGJ,KAAK;QACRG,OAAO,EAAE,KAAK;QACdE,eAAe,EAAE,IAAI;QACrBC,IAAI,EAAEL,MAAM,CAACM,OAAO,CAACD,IAAI;QACzBF,KAAK,EAAE;MACT,CAAC;IACH,KAAK,eAAe;MAClB,OAAO;QACL,GAAGJ,KAAK;QACRG,OAAO,EAAE,KAAK;QACdE,eAAe,EAAE,KAAK;QACtBC,IAAI,EAAE,IAAI;QACVF,KAAK,EAAEH,MAAM,CAACM;MAChB,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACL,GAAGP,KAAK;QACRK,eAAe,EAAE,KAAK;QACtBC,IAAI,EAAE,IAAI;QACVH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGJ,KAAK;QACRM,IAAI,EAAE;UAAE,GAAGN,KAAK,CAACM,IAAI;UAAE,GAAGL,MAAM,CAACM;QAAQ;MAC3C,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QAAE,GAAGP,KAAK;QAAEI,KAAK,EAAE;MAAK,CAAC;IAClC;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,MAAMQ,YAAY,GAAG;EACnBH,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVH,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACX,KAAK,EAAEY,QAAQ,CAAC,GAAGpB,UAAU,CAACO,WAAW,EAAES,YAAY,CAAC;;EAE/D;EACAf,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGnB,QAAQ,CAAC,CAAC;MACxB,IAAImB,KAAK,EAAE;QACT,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMrB,WAAW,CAACsB,WAAW,CAAC,CAAC;UAChDJ,QAAQ,CAAC;YACPV,IAAI,EAAE,eAAe;YACrBK,OAAO,EAAE;cAAED,IAAI,EAAES,QAAQ,CAACT;YAAK;UACjC,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdV,WAAW,CAACuB,MAAM,CAAC,CAAC;UACpBL,QAAQ,CAAC;YAAEV,IAAI,EAAE;UAAS,CAAC,CAAC;QAC9B;MACF,CAAC,MAAM;QACLU,QAAQ,CAAC;UAAEV,IAAI,EAAE;QAAS,CAAC,CAAC;MAC9B;IACF,CAAC;IAEDW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnCP,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAc,CAAC,CAAC;IACjC,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMrB,WAAW,CAACwB,KAAK,CAACC,WAAW,CAAC;MACrDP,QAAQ,CAAC;QACPV,IAAI,EAAE,eAAe;QACrBK,OAAO,EAAE;UAAED,IAAI,EAAES,QAAQ,CAACT;QAAK;MACjC,CAAC,CAAC;MACF,OAAOS,QAAQ;IACjB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdQ,QAAQ,CAAC;QACPV,IAAI,EAAE,eAAe;QACrBK,OAAO,EAAEH,KAAK,CAACgB;MACjB,CAAC,CAAC;MACF,MAAMhB,KAAK;IACb;EACF,CAAC;EAED,MAAMiB,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnCV,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAc,CAAC,CAAC;IACjC,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMrB,WAAW,CAAC2B,QAAQ,CAACC,QAAQ,CAAC;MACrDV,QAAQ,CAAC;QACPV,IAAI,EAAE,eAAe;QACrBK,OAAO,EAAE;UAAED,IAAI,EAAES,QAAQ,CAACT;QAAK;MACjC,CAAC,CAAC;MACF,OAAOS,QAAQ;IACjB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdQ,QAAQ,CAAC;QACPV,IAAI,EAAE,eAAe;QACrBK,OAAO,EAAEH,KAAK,CAACgB;MACjB,CAAC,CAAC;MACF,MAAMhB,KAAK;IACb;EACF,CAAC;EAED,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACnBvB,WAAW,CAACuB,MAAM,CAAC,CAAC;IACpBL,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAS,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMqB,UAAU,GAAID,QAAQ,IAAK;IAC/BV,QAAQ,CAAC;MAAEV,IAAI,EAAE,aAAa;MAAEK,OAAO,EAAEe;IAAS,CAAC,CAAC;EACtD,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBZ,QAAQ,CAAC;MAAEV,IAAI,EAAE;IAAc,CAAC,CAAC;EACnC,CAAC;EAED,MAAMuB,KAAK,GAAG;IACZ,GAAGzB,KAAK;IACRkB,KAAK;IACLG,QAAQ;IACRJ,MAAM;IACNM,UAAU;IACVC;EACF,CAAC;EAED,oBACE3B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAChCA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CAzFWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AA2FzB,OAAO,MAAMuB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG3C,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACoC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAQpB,eAAelC,WAAW;AAAC,IAAAiC,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}