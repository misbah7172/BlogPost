{"ast":null,"code":"import { apiRequest } from './api';\nexport const transactionService = {\n  // Get subscription plans and prices\n  getPlans: async () => {\n    return await apiRequest('/transactions/plans');\n  },\n  // Get payment information\n  getPaymentInfo: async () => {\n    return await apiRequest('/transactions/payment-info');\n  },\n  // Submit transaction\n  createTransaction: async transactionData => {\n    return await apiRequest('/transactions', {\n      method: 'POST',\n      body: transactionData\n    });\n  },\n  // Submit new transaction (alias for createTransaction)\n  submitTransaction: async transactionData => {\n    return await apiRequest('/transactions', {\n      method: 'POST',\n      body: transactionData\n    });\n  },\n  // Get user's transactions\n  getUserTransactions: async (params = {}) => {\n    const searchParams = new URLSearchParams();\n    Object.keys(params).forEach(key => {\n      if (params[key]) {\n        searchParams.append(key, params[key]);\n      }\n    });\n    const queryString = searchParams.toString();\n    return await apiRequest(`/transactions/my-transactions${queryString ? `?${queryString}` : ''}`);\n  },\n  // Admin functions\n  getAllTransactions: async (params = {}) => {\n    const searchParams = new URLSearchParams();\n    Object.keys(params).forEach(key => {\n      if (params[key]) {\n        searchParams.append(key, params[key]);\n      }\n    });\n    const queryString = searchParams.toString();\n    return await apiRequest(`/transactions${queryString ? `?${queryString}` : ''}`);\n  },\n  approveTransaction: async trxId => {\n    return await apiRequest(`/transactions/${trxId}/approve`, {\n      method: 'POST'\n    });\n  },\n  rejectTransaction: async trxId => {\n    return await apiRequest(`/transactions/${trxId}/reject`, {\n      method: 'POST'\n    });\n  }\n};","map":{"version":3,"names":["apiRequest","transactionService","getPlans","getPaymentInfo","createTransaction","transactionData","method","body","submitTransaction","getUserTransactions","params","searchParams","URLSearchParams","Object","keys","forEach","key","append","queryString","toString","getAllTransactions","approveTransaction","trxId","rejectTransaction"],"sources":["/home/mighty/Desktop/CODE/Blog_Post/frontend/src/services/transactionService.js"],"sourcesContent":["import { apiRequest } from './api';\n\nexport const transactionService = {\n  // Get subscription plans and prices\n  getPlans: async () => {\n    return await apiRequest('/transactions/plans');\n  },\n\n  // Get payment information\n  getPaymentInfo: async () => {\n    return await apiRequest('/transactions/payment-info');\n  },\n\n  // Submit transaction\n  createTransaction: async (transactionData) => {\n    return await apiRequest('/transactions', {\n      method: 'POST',\n      body: transactionData,\n    });\n  },\n\n  // Submit new transaction (alias for createTransaction)\n  submitTransaction: async (transactionData) => {\n    return await apiRequest('/transactions', {\n      method: 'POST',\n      body: transactionData,\n    });\n  },\n\n  // Get user's transactions\n  getUserTransactions: async (params = {}) => {\n    const searchParams = new URLSearchParams();\n    \n    Object.keys(params).forEach(key => {\n      if (params[key]) {\n        searchParams.append(key, params[key]);\n      }\n    });\n    \n    const queryString = searchParams.toString();\n    return await apiRequest(`/transactions/my-transactions${queryString ? `?${queryString}` : ''}`);\n  },\n\n  // Admin functions\n  getAllTransactions: async (params = {}) => {\n    const searchParams = new URLSearchParams();\n    \n    Object.keys(params).forEach(key => {\n      if (params[key]) {\n        searchParams.append(key, params[key]);\n      }\n    });\n    \n    const queryString = searchParams.toString();\n    return await apiRequest(`/transactions${queryString ? `?${queryString}` : ''}`);\n  },\n\n  approveTransaction: async (trxId) => {\n    return await apiRequest(`/transactions/${trxId}/approve`, {\n      method: 'POST',\n    });\n  },\n\n  rejectTransaction: async (trxId) => {\n    return await apiRequest(`/transactions/${trxId}/reject`, {\n      method: 'POST',\n    });\n  },\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,OAAO,MAAMC,kBAAkB,GAAG;EAChC;EACAC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,OAAO,MAAMF,UAAU,CAAC,qBAAqB,CAAC;EAChD,CAAC;EAED;EACAG,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,OAAO,MAAMH,UAAU,CAAC,4BAA4B,CAAC;EACvD,CAAC;EAED;EACAI,iBAAiB,EAAE,MAAOC,eAAe,IAAK;IAC5C,OAAO,MAAML,UAAU,CAAC,eAAe,EAAE;MACvCM,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEF;IACR,CAAC,CAAC;EACJ,CAAC;EAED;EACAG,iBAAiB,EAAE,MAAOH,eAAe,IAAK;IAC5C,OAAO,MAAML,UAAU,CAAC,eAAe,EAAE;MACvCM,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEF;IACR,CAAC,CAAC;EACJ,CAAC;EAED;EACAI,mBAAmB,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC1C,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAAC,CAAC;IAE1CC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MACjC,IAAIN,MAAM,CAACM,GAAG,CAAC,EAAE;QACfL,YAAY,CAACM,MAAM,CAACD,GAAG,EAAEN,MAAM,CAACM,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;IAEF,MAAME,WAAW,GAAGP,YAAY,CAACQ,QAAQ,CAAC,CAAC;IAC3C,OAAO,MAAMnB,UAAU,CAAC,gCAAgCkB,WAAW,GAAG,IAAIA,WAAW,EAAE,GAAG,EAAE,EAAE,CAAC;EACjG,CAAC;EAED;EACAE,kBAAkB,EAAE,MAAAA,CAAOV,MAAM,GAAG,CAAC,CAAC,KAAK;IACzC,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAAC,CAAC;IAE1CC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MACjC,IAAIN,MAAM,CAACM,GAAG,CAAC,EAAE;QACfL,YAAY,CAACM,MAAM,CAACD,GAAG,EAAEN,MAAM,CAACM,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;IAEF,MAAME,WAAW,GAAGP,YAAY,CAACQ,QAAQ,CAAC,CAAC;IAC3C,OAAO,MAAMnB,UAAU,CAAC,gBAAgBkB,WAAW,GAAG,IAAIA,WAAW,EAAE,GAAG,EAAE,EAAE,CAAC;EACjF,CAAC;EAEDG,kBAAkB,EAAE,MAAOC,KAAK,IAAK;IACnC,OAAO,MAAMtB,UAAU,CAAC,iBAAiBsB,KAAK,UAAU,EAAE;MACxDhB,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAEDiB,iBAAiB,EAAE,MAAOD,KAAK,IAAK;IAClC,OAAO,MAAMtB,UAAU,CAAC,iBAAiBsB,KAAK,SAAS,EAAE;MACvDhB,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}